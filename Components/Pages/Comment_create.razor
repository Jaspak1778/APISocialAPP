@page "/comment_create/{postId:int}"
@inject HttpClient HttpClient
@inject CsrfService CsrfService
@inject NavigationManager NavigationManager

<style>
    input{
        height:auto;
    }

    .hovered {
        margin-left:1rem;
        width: 20px;
        height: 20px;
        transition: transform 0.3s ease; /* Pehmeä animaatio skaalaamiselle */
    }

        .hovered:hover {
            transform: scale(1.7); /* Skaalaa 1.5x ilman asettelumuutosta */
</style>

<p>Jätä kommentti</p>

<div class="row">
    <div class="col">
        <form>
            <input @bind="kommentti"></input>
            <a @onclick="NewComment"><img class="hovered" src="Icons/check2-square.svg" /></a>
        </form>
    </div>
</div>
<p>@success</p>

@code {

    [Parameter]
    public int PostId { get; set; }

    [Parameter]
    public EventCallback OnCommentCreated { get; set; }
    private const string RequestUri = "http://192.168.238.225:8000/api/comments/";
    // private const string CsrfUri = "http://192.168.238.225:8000/api/csrf/";

    private string? kommentti;
    private string? success;


    private async Task NewComment()
    {
        try
        {
            // Hakee CSRF-tokenin CsrfServicestä
            var csrfToken = await CsrfService.GetCsrfTokenAsync();

            var CommentData = new
            {   
                post = PostId,
                comment_content = kommentti
            };

            var json = JsonConvert.SerializeObject(CommentData);
            var content = new StringContent(json, Encoding.UTF8, "application/json");

            // Lisätään CSRF token headeriin
            content.Headers.Add("X-CSRFToken", csrfToken);
            var response = await HttpClient.PostAsync(RequestUri, content);

            if (response.IsSuccessStatusCode)
            {
                success = "Kommentti lähetetty onnistuneesti!";
                kommentti = ""; // Tyhjennetään kenttä onnistuneen lähetyksen jälkeen
                await OnCommentCreated.InvokeAsync();
            }
            else
            {
                success = "Kommentin lähetys epäonnistui. Tarkista API.";
            }
        }
        catch (Exception ex)
        {
            success = $"Virhe: {ex.Message}";
        }
    }
    //Apuluokka csrf tokenille
    private class CsrfTokenResponse
    {
        public string? CsrfToken { get; set; }
    }
}
