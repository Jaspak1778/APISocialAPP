@page "/"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject User User



<center>
<h2>Kirjaudu</h2>
<h3>Anna kirjautumis tiedot</h3>


<div>
    <br />
    <EditForm Model="this" OnValidSubmit="Logins">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div>
            <InputText name="user" @onmouseover="() => showFail = false" @bind-Value="username" placeholder="Käyttäjänimi" required />
        </div>
        <br />
        <div>
            <InputText name="pass" @bind-Value="password" placeholder="Salasanasi"  required />
        </div>
        <div class="flex-lg-wrap">
            <button type="submit">
                Kirjaudu
            </button>
        </div>
        <br />

    </EditForm>
    <br />
    <div>
        @if (showSuccess)
        {
            <div>
                <Alert Color="AlertColor.Success">@success</Alert>
            </div>
        }
        @if (showFail)
        {
            <div>
                <Alert Color="AlertColor.Danger">@success</Alert>
            </div>

        }

    </div>

</div>
</center>
@code {


    //Django Rest API Backendille
    //osoitteet riippuen laitteesta
    // ipconfig , IPV4 jos ajaa paikallisella laitteella http : / / oma ip :8000/api/endpoint
    // http ://127.0.0.1:8000/api/  : Windows machine
    // http ://10.0.2.2:8000/api/        : Emulator

    private string? username;
    private string? password;
    private string? success;
    private bool showSuccess = false;
    private bool showFail = false;
    //LOGIN URI

    private const string RequestUri = "http://127.0.0.1:8000/api/login/";

    //USERS URI

    private const string UsersUri = "http://127.0.0.1:8000/api/users/";                     


    private async Task Logins()
    {

        var loginData = new

        {
            username = username,
            password = password
        };

        var json = JsonConvert.SerializeObject(loginData);
        var response = await HttpClient.PostAsync(RequestUri,
            new StringContent(json, Encoding.UTF8, "application/json"));
        if (response.IsSuccessStatusCode)

        {
            var responseContent = await response.Content.ReadAsStringAsync();
            var user = JsonConvert.DeserializeObject<User>(responseContent);
            if (user != null)

            {
                showSuccess = true;
                success = "Kirjauduttu sisään..";
                await FetchUserDetails();
            }
            else

            {
                showFail = true;
                success = "Kirjautuminen epäonnistui: Käyttäjä ei löytynyt.";
            }

        }
        else
        {   
            showFail = true;
            success = "Väärä tunnus tai salasana, tarkista!";
            Console.WriteLine("Kirjautuminen epäonnistui.");
        }
    }
    private async Task FetchUserDetails()
    {

        var userResponse = await HttpClient.GetAsync("http://127.0.0.1:8000/api/users/");

        if (userResponse.IsSuccessStatusCode)
        {
            var userContent = await userResponse.Content.ReadAsStringAsync();
            var userDetailsList = JsonConvert.DeserializeObject<List<User>>(userContent);
            var userDetails = userDetailsList?.FirstOrDefault();
            if (userDetails != null)

            {
                User.username = userDetails.username; // Aseta käyttäjänimi
                User.id= userDetails.id;         // Aseta käyttäjän ID
                User.IsLoggedIn = true;                // Aseta kirjautumistila
                Console.WriteLine($"Kirjautunut käyttäjä: {userDetails.username}, Etunimi: {userDetails.first_name}, Sukunimi: {userDetails.last_name}");
                NavigationManager.NavigateTo("/feed");
            }
            else
            {
                Console.WriteLine("Käyttäjän tietojen hakeminen epäonnistui: Käyttäjä ei löytynyt.");
            }
        }
        else
        {
            Console.WriteLine("Käyttäjän tietojen hakeminen epäonnistui.");
            NavigationManager.NavigateTo("/feed");
        }
    }
}