@page "/newpost"
@inject HttpClient HttpClient
@inject CsrfService CsrfService

<style>
.textarea{
    outline-width:2px;
    outline-color:blue;
    animation:normal;
    }

</style>


<h4>Uusi Postaus</h4>

<div>
    <textarea class=textarea placeholder="Julkaise jotain uutta ! " @bind="postaus"></textarea>
</div>

<button class="btn btn-primary" @onclick="NewPost">Lähetä postaus</button>

<p>@success</p>

@code {
    private const string RequestUri = "http://127.0.0.1:8000/api/posts/";
    private const string CsrfUri = "http://127.0.0.1:8000/api/csrf/";

    private string? postaus;
    private string? success;

    private async Task NewPost()
    {
        try
        {
            // Hakee CSRF-tokenin CsrfServicestä
            var csrfToken = await CsrfService.GetCsrfTokenAsync();

            var postData = new
            {
                content = postaus
            };

            var json = JsonConvert.SerializeObject(postData);
            var content = new StringContent(json, Encoding.UTF8, "application/json");
            // Lisätään CSRF token headeriin
            content.Headers.Add("X-CSRFToken", csrfToken);
            var response = await HttpClient.PostAsync(RequestUri, content);
            if (response.IsSuccessStatusCode)
            {
                success = "Postaus lähetetty onnistuneesti!";
                postaus = ""; // Tyhjennetään kenttä onnistuneen lähetyksen jälkeen
            }
            else
            {
                success = "Postauksen lähetys epäonnistui. Tarkista API.";
            }
        }
        catch (Exception ex)
        {
            success = $"Virhe: {ex.Message}";
        }
    }

}
